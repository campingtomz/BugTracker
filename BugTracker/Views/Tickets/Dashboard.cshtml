

@model BugTracker.Models.Ticket
@using BugTracker.Helpers;
@{
    ViewBag.Title = "DashBoard";
}
@{TicketHelper ticketHelper = new TicketHelper();
    UserRoleHelper roleHelper = new UserRoleHelper();
    ProjectHelper projectHelper = new ProjectHelper();
}
<div class="container-fluid p-t-20">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs profile-tab" role="tablist">
                    <li class="nav-item"> <a class="nav-link active" data-toggle="tab" href="#Ticket" role="tab">Ticket</a> </li>
                    <li class="nav-item"> <a class="nav-link" data-toggle="tab" href="#ProjectInfo" role="tab">Project Info</a> </li>
                    <li class="nav-item"> <a class="nav-link" data-toggle="tab" href="#TicketAttachments" role="tab">Ticket Attachments</a> </li>
                    <li class="nav-item"> <a class="nav-link" data-toggle="tab" href="#Comments" role="tab">Comments</a> </li>
                    <li class="nav-item"> <a class="nav-link" data-toggle="tab" href="#histories" role="tab">Ticket Log</a> </li>

                </ul>
                <!-- Tab panes -->
                <div class="tab-content">
                    <div class="tab-pane tabcontent-border active" id="Ticket" role="tabpanel">
                        @using (Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.ProjectId)
                            @Html.HiddenFor(model => model.SubmitterId)
                            @Html.HiddenFor(model => model.Created)
                            if (!ticketHelper.CanEditTicket(Model.Id))
                            {
                                @Html.HiddenFor(model => model.TicketTypeId)
                                @Html.HiddenFor(model => model.TicketPriorityId)
                                @Html.HiddenFor(model => model.TicketStatusId)

                            }
                            if (!ticketHelper.CanEditTicketDev(Model.Id))
                            {
                                @Html.HiddenFor(model => model.DeveloperId)
                            }
                            <div class="card-body">
                                <div class="row p-t-20">
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label ">Ticket Issue:</label>
                                            @if (ticketHelper.CanEditTicket(Model.Id))
                                            {
                                                @Html.TextBoxFor(model => model.Issue, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                <p class="form-control-static">@Html.DisplayFor(model => model.Issue)</p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label ">Ticket Description :</label>
                                            @if (ticketHelper.CanEditTicket(Model.Id))
                                            {
                                                @Html.TextAreaFor(model => model.IssueDescription, new { @class = "form-control", @rows = "5" })
                                                @Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })

                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="row p-t-20">
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label">Ticket Submitter :</label>
                                            <p class="form-control-static"> @Html.DisplayFor(model => model.Submitter.FullName)  </p>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label class="control-label">Ticket Developer :</label>
                                                    @if (ticketHelper.CanEditTicketDev(Model.Id))
                                                    {
                                                        @Html.DropDownList("DeveloperId", null, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                                                    }
                                                    else
                                                    {
                                                        <p class="form-control-static">@Html.DisplayFor(model => model.Developer.FullName)  </p>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />

                                <div class="row p-t-20">
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label ">Ticket Type:</label>
                                            @if (ticketHelper.CanEditTicket(Model.Id))
                                            {
                                                @Html.DropDownList("TicketTypeId", null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                <p class="form-control-static">  @Html.DisplayFor(model => model.TicketType.Name) </p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label">Created Date:</label>
                                            <p class="form-control-static"> @Model.Created.ToString("MMM dd yyyy") </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row p-t-20">
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label">Ticket Priority:</label>
                                            @if (ticketHelper.CanEditTicket(Model.Id))
                                            {
                                                @Html.DropDownList("TicketPriorityId", null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                <p class="form-control-static"> @Html.DisplayFor(model => model.TicketPriority.Name) </p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label">last Update:</label>
                                            @if (Model.Updated != null)
                                            {
                                                <p class="form-control-static"> @Model.Updated.GetValueOrDefault().ToString("MMM dd yyyy") </p>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="row p-t-20">
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label">Ticket Status:</label>
                                            @if (ticketHelper.CanEditTicket(Model.Id))
                                            {
                                                @Html.DropDownList("TicketStatusId", null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                <p class="form-control-static"> @Html.DisplayFor(model => model.TicketStatus.Name) </p>
                                            }

                                        </div>
                                    </div>
                                </div>
                                <hr />
                                @if (ticketHelper.CanEditTicket(Model.Id))
                                {
                                    <button type="submit" class="btn btn-info"> <i class="fa fa-pencil"></i> Submit</button>
                                }
                            </div>
                        }
                    </div>
                    <div class="tab-pane  tabcontent-border" id="ProjectInfo" role="tabpanel">
                        <div class="card-body">
                            <div class="row p-t-20">
                                <div class="col-md-6">
                                    <div class="form-group ">
                                        <label class="control-label">Project Name :</label>
                                        <p class="form-control-static"> @Html.DisplayFor(model => model.project.Name) </p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group ">
                                        <label class="control-label">Project Manager :</label>
                                        <p class="form-control-static"> @projectHelper.ListUserOnProjectInRole(Model.ProjectId, "ProjectManager").FirstOrDefault().FullName  </p>
                                    </div>
                                </div>
                            </div>
                            <div class="row p-t-20 ">
                                <div class="col-md-6">
                                    <div class="form-group ">
                                        <label class="control-label">Project Submitter :</label>
                                        <p class="form-control-static">@Model.Submitter.FullName</p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group ">
                                        <label class="control-label">Project Developers :</label>
                                        <p class="form-control-static">@Model.Developer.FullName</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane  tabcontent-border" id="TicketAttachments" role="tabpanel">
                        <div class="card-body">
                            @if (Model.Attachments.Count > 0)
                            {
                                <div class="row ">
                                    <div class="col-12">
                                        <div class=" form-group">
                                            <div class="table-responsive">
                                                <table class="example24 display nowrap table table-hover table-striped table-bordered" cellspacing="0" width="100%">
                                                    <thead>
                                                        <tr>
                                                            <th>File Name</th>
                                                            <th>File Link</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var attachment in Model.Attachments.ToList())
                                                        {
                                                            <tr>
                                                                <th>@attachment.FileName</th>
                                                                <th><a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a></th>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }else
                            { <h4 class="card-title">No Files Attached to the Ticket</h4>}
                            @if (ticketHelper.CanAddAttachment(Model.Id))
                            {
                                <hr />
                                using (Html.BeginForm("UploadFileToTicket", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("TicketId", Model.Id)
                                    <div class="row p-t-20">
                                        <div class="col-md-6">
                                            <div class=" form-group">
                                                <label class="control-label ">File Name :</label>
                                                @Html.Editor("File Name", new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessage("FileName", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class=" form-group">
                                                <label class="control-label">Attachment Description :</label>
                                                @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessage("attachmentDescription", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row p-t-20">
                                        <div class="col-12">
                                            <label class="control-label">File Upload</label>
                                            <input name="file" type="file" class=" dropify form-control" id="fileUpload" />
                                            <hr />
                                            <button type="submit" class="btn btn-info"> <i class="fa fa-pencil"></i> Upload</button>
                                        </div>
                                    </div>
                                }
                            }


                        </div>
                    </div>
                    <div class="tab-pane tabcontent-border" id="Comments" role="tabpanel">
                        <div class="card-body">
                            @if (Model.Comments.Count > 0)
                            {
                                <div class="row p-t-20 boarder justify-content-center">
                                    <div class="col-6">
                                        <div class="comment-widgets m-b-20">
                                            <div class="chat-box b-all">
                                                <ul class="chat-list">
                                                    @{var count = 1;}
                                                    @foreach (var comment in Model.Comments)
                                                    {
                                                        <li>
                                                            <!-- Comment Row -->
                                                            <div class="d-flex flex-row comment-row  b-all">
                                                                <div class="p-2"><span class="round"><a href="@Url.Action("ManageUser", "UserManagment", new { userid = comment.User.Id })"><img src="@comment.User.AvatarPath" alt="user" width="50"></a></span></div>
                                                                <div class="comment-text w-100">
                                                                    <h5>@comment.User.FullName</h5>
                                                                    <div class="comment-footer">
                                                                        <span class="date">@comment.Created.ToString("MMM dd yyyy")</span>
                                                                    </div>
                                                                    <p class="m-b-5 m-t-10">@comment.Comment</p>
                                                                </div>
                                                            </div>
                                                        </li>
                                                        { count++; }
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            { <h4 class="card-title">No Comments on The Ticket</h4>}
                            @if (ticketHelper.CanMakeComment(Model.Id))
                            {
                                using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("TicketId", Model.Id)
                                    <div class="row p-t-20  justify-content-center">
                                        <div class="col-6">
                                            <label class="control-label">Add Comment</label>

                                            @Html.TextArea("Comment", new { @class = "form-control", @rows = "5" })
                                            <hr />
                                            <button type="submit" class="btn btn-info"> <i class="fa fa-pencil"></i> Add New Comment</button>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="tab-pane tabcontent-border" id="histories" role="tabpanel">
                        <div class="card-body">
                            @if (Model.Histories.Count > 0)
                            {
                                <div class="row ">
                                    <div class="col-12">
                                        <div class=" form-group">
                                            <div class="table-responsive">
                                                <table class="example24 display nowrap table table-hover table-striped table-bordered" cellspacing="0" width="100%">
                                                    <thead>
                                                        <tr>
                                                            <th>User</th>
                                                            <th>Property</th>
                                                            <th>Old Value</th>
                                                            <th>New Value</th>
                                                            <th>Changed On</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var history in Model.Histories.ToList())
                                                        {
                                                            <tr>
                                                                <th>@history.User.FullName</th>
                                                                <th>@history.Property</th>
                                                                <th>@history.OldValue</th>
                                                                <th>@history.NewValue</th>
                                                                <th>@history.ChangedOn.ToString("MMM dd yyyy")</th>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            { <h4 class="card-title">No Logs for this Ticket</h4>}

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            // Basic
            $('.dropify').dropify();
        });
    </script>
}


