@model BugTracker.Models.Ticket

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("onPage", false)
    <div class="row justify-content-center">
        <div class="col-md-4">
            <div class="card card-body">
                <h3 class="box-title m-b-0">Create Ticket</h3>
                <div class="row">
                    <div class="col-sm-12 col-xs-12">
                        <form>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectId, "Project")
                                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketPriorityId, "TicketPriority")
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })

                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketTypeId, "TicketType")
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Issue)
                                @Html.TextBoxFor(model => model.Issue, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IssueDiscription)
                                @Html.TextAreaFor(model => model.IssueDiscription, new { @class = "form-control", @id= "IssueDiscription" })
                                @Html.ValidationMessageFor(model => model.IssueDiscription, "", new { @class = "text-danger" })
                                
                            </div>
                            <button type="submit" class="btn btn-success waves-effect waves-light m-r-10">Create</button>
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-inverse waves-effect waves-light" })
                            @*<button type="submit" class="btn btn-inverse waves-effect waves-light">Cancel</button>*@
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>


}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
